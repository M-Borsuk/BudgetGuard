name: Publish to PyPI

on:
  push:
    branches:
        - "production"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          python -m pip install bump2version
    
      - name: Bump version in VERSION file
        run: |
            VERSION=${{ env.VERSION }}
            VERSION=$(bump2version --list minor --dry-run --allow-dirty | awk -F= '/new_version=/ { print $2 }')
            echo $VERSION > VERSION
    
      - name: Bump version in pyproject.toml and __init__.py
        run: |
            VERSION=${{ env.VERSION }}
            bump2version --allow-dirty --new-version $VERSION minor pyproject.toml
            bump2version --allow-dirty --new-version $VERSION minor budgetguard/__init__.py
    
      - name: Commit version bump
        run: |
            git config --local user.email "actions@github.com"
            git config --local user.name "GitHub Actions"
            git commit -a -m "Bump version to ${{ env.VERSION }} [skip ci]"
            git push
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: v${{ env.VERSION }}
            release_name: Release v${{ env.VERSION }}
            draft: false
            prerelease: false

      - name: Configure poetry
        env:
          pypi_token: ${{ secrets.PyPI_TOKEN }}
        run: poetry config pypi-token.pypi $pypi_token
    
      - name: Build and publish
        run: poetry publish --build
