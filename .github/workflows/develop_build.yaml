name: Build develop branch CI/CD

on:
  push:
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions
          python -m pip install poetry
          python -m pip install bump2version

      - name: Read version number
        run: |
              echo "VERSION=$(cat VERSION)" >> $VERSION_ENV

      - name: Run tox
        run: tox
  
      - name: Bump version in VERSION file
        run: |
          VERSION=${{ env.VERSION_ENV }}
          VERSION=$(bump2version --list patch --dry-run --allow-dirty | awk -F= '/new_version=/ { print $2 }')
          echo $VERSION > VERSION
  
      - name: Bump version in pyproject.toml and __init__.py
        run: |
          VERSION=${{ env.VERSION_ENV }}
          bump2version --allow-dirty --new-version $VERSION patch pyproject.toml
          bump2version --allow-dirty --new-version $VERSION patch budgetguard/__init__.py
  
      - name: Commit version bump
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git commit -a -m "Bump version to ${{ env.VERSION_ENV }} [skip ci]"
          git push
    
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: v${{ env.VERSION }}
            release_name: Release v${{ env.VERSION }}
            draft: false
            prerelease: false
          
